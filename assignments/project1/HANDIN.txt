Student Name #1: Steven Wallace [12228145]
Student ugrad login #1: x9u9a

Student Name #2: Ahmed Elmaghraby [45461134]
Student ugrad login #2: x2x9a

Team name (for fun!): Top Dawgs

Acknowledgment that you understand and have followed the course's
collaboration policy
(http://www.ugrad.cs.ubc.ca/~cs221/current/syllabus.shtml#conduct):

Steven Wallace and Ahmed Elmaghraby

TODO: submit using: make handin-proj1

----------------------------------------------------------------------

Approximate hours on project: 4

----------------------------------------------------------------------

For teams, rough breakdown of work:
MILESTONE1: Worked together on single computer
ArrayQueue: Ahmed
LinkedListQueue: Steven
HANDIN: Steven did first half. Ahmed did second half.

----------------------------------------------------------------------

Acknowledgment of assistance: TODO:

----------------------------------------------------------------------

Questions:

For the explanations, generally a sentence or two should be enough.
Type your answers directly in this file.


1.  Edit solve.cpp to use your queue classes to solve the MazeRunner
puzzle.  Set a large delay in the solvePuzzle function (like 1000000).
Do you see why this is called breadth-first search (BFS)?
How many steps long was your solution?  How does this compare with
the length of the solution (the number of steps) using DFS?

Yes. You can see how BFS checks each branch that it can find unlike
DFS which will check 1 branch and if it ends then it will check the
next branch.
The solution was 59 steps. Same number of steps using DFS.

2.  Try to solve the blank Sudoku board using your ArrayQueue
and LinkedListQueue classes.  What happens?

It becomes incredibly slow because there are so many options in a
blank sudoku game.

3.  Switch to the medium-difficulty Sudoku problem, and comment
out the delay and the print statements in the solvePuzzle function.
How long does it take to solve the puzzle using your ArrayQueue
class?  Using your LinkedListQueue class?  Is the difference big?

TODO:
LinkedListQueue:
real    1m0.217s
user    1m0.171s
sys     0m0.007s

5.  Edit solve.cpp to switch to English Peg Solitaire.  Try solving
this with the faster of your ArrayQueue or LinkedListQueue classes
(based on your answer to #3).  What happens?

TODO:

6.  Edit solve.cpp to switch to the 3x3 slider puzzle.  Try solving
this with the faster of your ArrayQueue or LinkedListQueue classes
(based on your answer to #3).  What happens?

TODO:

----------------------------------------------------------------------

We will be checking your implementations of ArrayQueue, and LinkedListQueue.
